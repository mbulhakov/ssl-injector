ARG DOCKER_PLATFORM

# Use a multi-stage build for the builder stage
FROM --platform=$DOCKER_PLATFORM rustlang/rust:nightly-bullseye as builder

ARG CARGO_TARGET

RUN apt-get update \
    && apt-get install -y \
    software-properties-common \
    && wget https://apt.llvm.org/llvm.sh \
    && chmod +x llvm.sh \
    && ./llvm.sh 16 \
    && apt-get install -y \
    libssl-dev \
    musl \
    musl-dev \
    musl-tools \
    pkg-config

RUN rustup component add rust-src
RUN rustup target add $CARGO_TARGET
RUN cargo install bpf-linker

COPY . /src
WORKDIR /src

# Needed for the compilation of eBPF part
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/llvm-16/lib/

RUN --mount=type=cache,target=/.root/cargo/registry \
    --mount=type=cache,target=/src/target \
    cargo xtask build-ebpf --release \
    && cargo clippy --target=$CARGO_TARGET --workspace --release -- -D warnings \
    && cargo build --release --target=$CARGO_TARGET \
    && cp /src/target/$CARGO_TARGET/release/ssl-injector /usr/sbin \
    && cp /src/log4rs.yml /usr/sbin


# Use a multi-stage build for the final stage
FROM --platform=$DOCKER_PLATFORM debian:bullseye

RUN apt update && apt install -y curl

# Copy the ssl-injector binary and log4rs configuration from the builder stage
COPY --from=builder /usr/sbin/ssl-injector /usr/sbin/
COPY --from=builder /usr/sbin/log4rs.yml /etc

# Set the entry point for the final image
ENTRYPOINT [ "/usr/sbin/ssl-injector" ]
